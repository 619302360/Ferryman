// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'base'
buildscript {
    ext {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        bintrayUser = properties.getProperty('bintrayUser')
        bintrayKey = properties.getProperty('bintrayKey')

        ferryman_group = 'com.jude'
        ferryman_version = '1.2.2'
        ferryman_version_compile = '1.2.2'
    }
    repositories {
        google()
        jcenter()
        maven {
            url "https://dl.bintray.com/jude95/maven"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath "com.jude:ferryman-modular:$ferryman_version_compile"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {pro ->
    if (!pro.name.startsWith("ferryman-"))return

    version = ferryman_version
    group = ferryman_group

    afterEvaluate{

        project.ext {
            package_repo = 'maven'

            package_group = 'com.jude'
            package_artifact = pro.name
            package_version = version
            package_description = 'A tool for Android'

            siteUrl = 'https://github.com/Jude95/Ferryman'
            gitUrl = 'https://github.com/Jude95/Ferryman'

            //开发者信息
            developerId = 'jude95'
            developerName = 'jude95'
            developerEmail = 'jude@helloworld.moe'

            //以上所有信息自行修改，以下不变

            licenseName = 'The Apache Software License, Version 2.0'
            licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            allLicenses = 'Apache-2.0'
        }
        project.apply from:'https://raw.githubusercontent.com/Jude95/JCenter/v2/bintray.gradle'
    }
}

task uploadAll { task ->

    task.group = 'upload'
    gradle.projectsEvaluated {
        task.dependsOn project.tasks.clean
        task.dependsOn project.tasks.build

        project.tasks.build.mustRunAfter project.tasks.clean

        project.subprojects {
            if (it.name.startsWith("ferryman-") && !it.tasks.isEmpty()) {
//                println it.name+" "+it.tasks
                Task upload = it.tasks.bintrayUpload
                task.dependsOn upload
                upload.mustRunAfter project.tasks.build
            }
        }
    }
}
